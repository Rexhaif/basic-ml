name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  base-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: nvidia/cuda:11.6.0-cudnn8-devel-ubuntu20.04
            tag: base-cuda11.6-cudnn8-devel
          - image: nvidia/cuda:11.6.0-cudnn8-runtime-ubuntu20.04
            tag: base-cuda11.6-cudnn8-runtime
          - image: nvidia/cuda:11.6.0-devel-ubuntu20.04
            tag: base-cuda11.6-devel
          - image: nvidia/cuda:11.6.0-runtime-ubuntu20.04
            tag: base-cuda11.6-runtime
          - image: nvidia/cuda:11.6.0-base-ubuntu20.04
            tag: base-cuda11.6
          - image: ubuntu:20.04
            tag: base-cpu
          
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push
        env:
          IMAGE: ${{ matrix.image }}
          TAG: ${{ matrix.tag }}
        working-directory: ./basic
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --push \
            --build-arg BASE_IMAGE=$IMAGE \
            --tag ${{ secrets.DOCKERHUB_USERNAME }}/basic-ml:$TAG \
            --file Dockerfile \
            .

  jupyter-image:
    runs-on: ubuntu-latest
    needs: base-image
    strategy:
      matrix:
        tag:
          - cuda11.6-cudnn8-devel
          - cuda11.6-cudnn8-runtime
          - cuda11.6-devel
          - cuda11.6-runtime
          - cuda11.6
          - cpu
          
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push
        env:
          TAG: ${{ matrix.tag }}
        working-directory: ./jupyter
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --push \
            --build-arg BASE_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/basic-ml:base-$TAG \
            --tag ${{ secrets.DOCKERHUB_USERNAME }}/basic-ml:jupyter-$TAG \
            --file Dockerfile \
            .
            
  ssh-image:
    runs-on: ubuntu-latest
    needs: base-image
    strategy:
      matrix:
        tag:
          - cuda11.6-cudnn8-devel
          - cuda11.6-cudnn8-runtime
          - cuda11.6-devel
          - cuda11.6-runtime
          - cuda11.6
          - cpu
          
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push
        env:
          TAG: ${{ matrix.tag }}
        working-directory: ./ssh
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --push \
            --build-arg BASE_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/basic-ml:base-$TAG \
            --tag ${{ secrets.DOCKERHUB_USERNAME }}/basic-ml:ssh-$TAG \
            --file Dockerfile \
            .

  update-description:
    runs-on: ubuntu-latest
    needs:
      - jupyter-image
      - ssh-image
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ secrets.DOCKERHUB_USERNAME }}/basic-ml
